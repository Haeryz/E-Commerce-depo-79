name: Deploy to Azure Web App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          
      # Add caching to speed up deployment
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies and build
        run: |
          npm ci
          npm ci --prefix depo79
          npm run build --prefix depo79
          
      # Create a .env file with the needed variables
      - name: Create environment file
        run: |
          echo "NODE_ENV=production" > .env
          echo "PORT=8080" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SITE_KEY=${{ secrets.SITE_KEY }}" >> .env
          echo "CLOUDFLARE_SECRET_KEY=${{ secrets.CLOUDFLARE_SECRET_KEY }}" >> .env
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
          echo "ADMIN_SECRET_KEY=${{ secrets.ADMIN_SECRET_KEY }}" >> .env
          echo "IMAGE_STORAGE_KEY=${{ secrets.IMAGE_STORAGE_KEY }}" >> .env
          echo "IMAGE_STORAGE_SECRET=${{ secrets.IMAGE_STORAGE_SECRET }}" >> .env
          echo "FRONTEND_URL=https://internship-bngefpfzewbrd8dw.southeastasia-01.azurewebsites.net" >> .env

      # Create a clean deployment package
      - name: Create deployment directory
        run: |
          # Create temp directory for deployment
          mkdir -p deployment_package

      # Modify package.json for deployment
      - name: Create deployment package.json
        run: |
          cat package.json | jq '.scripts.build = "echo Frontend already built"' | jq '.scripts.start = "node backend/server.js"' > deployment_package/package.json
          
      # Complete the deployment package and remove sharp
      - name: Copy deployment files and prepare for Azure
        run: |
          # Copy ENTIRE backend directory with all subdirectories
          cp -r backend deployment_package/
          
          # Debug: List files to verify complete copy
          find deployment_package/backend -type f | sort
          
          # Create frontend directory and copy dist
          mkdir -p deployment_package/depo79/dist
          cp -r depo79/dist/* deployment_package/depo79/dist/
          
          # Copy all root files needed
          cp package.json deployment_package/
          cp package-lock.json deployment_package/
          cp .env deployment_package/
          
          # Add a .deployment file
          echo '[config]' > deployment_package/.deployment
          echo 'SCM_DO_BUILD_DURING_DEPLOYMENT=false' >> deployment_package/.deployment
          
          # Create zip from clean directory
          cd deployment_package
          zip -r ../deploy.zip .
          cd ..

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "Internship"
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./deploy.zip