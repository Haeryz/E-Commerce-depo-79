name: Deploy to Azure Web App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          
      # Add caching to speed up deployment
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies and build
        run: |
          npm ci
          npm ci --prefix depo79
          npm run build --prefix depo79
          
      # Create a .env file with the needed variables
      - name: Create environment file
        run: |
          echo "NODE_ENV=production" > .env
          echo "PORT=8080" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SITE_KEY=${{ secrets.SITE_KEY }}" >> .env
          echo "CLOUDFLARE_SECRET_KEY=${{ secrets.CLOUDFLARE_SECRET_KEY }}" >> .env
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
          echo "ADMIN_SECRET_KEY=${{ secrets.ADMIN_SECRET_KEY }}" >> .env
          echo "IMAGE_STORAGE_KEY=${{ secrets.IMAGE_STORAGE_KEY }}" >> .env
          echo "IMAGE_STORAGE_SECRET=${{ secrets.IMAGE_STORAGE_SECRET }}" >> .env
          echo "FRONTEND_URL=https://internship-bngefpfzewbrd8dw.southeastasia-01.azurewebsites.net" >> .env

      # Create a clean deployment package
      - name: Create deployment directory
        run: |
          # Create temp directory for deployment
          mkdir -p deployment_package

      # Modify package.json for deployment
      - name: Create deployment package.json
        run: |
          cat package.json | jq '.scripts.build = "echo Frontend already built"' | jq '.scripts.start = "node backend/server.js"' > deployment_package/package.json
          
      # Complete the deployment package and remove sharp
      - name: Copy deployment files and prepare for Azure
        run: |
          # Copy only necessary files
          cp -r backend deployment_package/
          mkdir -p deployment_package/depo79/dist
          cp -r depo79/dist/* deployment_package/depo79/dist/
          
          # Create a clean package.json file WITHOUT trailing commas
          echo '{
            "name": "e-commerce",
            "version": "1.0.0",
            "main": "index.js",
            "type": "module",
            "scripts": {
              "build": "echo Frontend already built",
              "start": "node backend/server.js"
            },
            "dependencies": {
              "@chakra-ui/react": "^3.5.1",
              "@emotion/react": "^11.14.0",
              "@emotion/styled": "^11.14.0",
              "axios": "^1.7.9",
              "bcryptjs": "^2.4.3", 
              "body-parser": "^1.20.3",
              "boxicons": "^2.1.4",
              "cloudinary": "^2.5.1",
              "compression": "^1.7.5",
              "cors": "^2.8.5",
              "cross-env": "^7.0.3",
              "csv-parser": "^3.2.0",
              "dotenv": "^16.4.7",
              "express": "^4.21.2",
              "express-rate-limit": "^7.5.0",
              "font-awesome": "^4.7.0",
              "framer-motion": "^12.0.6",
              "helmet": "^8.0.0",
              "jsonwebtoken": "^9.0.2",
              "mongodb": "^6.12.0",
              "mongoose": "^8.9.5",
              "morgan": "^1.10.0",
              "multer": "^1.4.5-lts.1",
              "nodemailer": "^6.9.16",
              "nodemon": "^3.1.9",
              "socket.io": "^4.8.1",
              "uuid": "^11.0.5"
            }
          }' > deployment_package/package.json
          
          # Copy package-lock.json and .env
          cp package-lock.json deployment_package/
          cp .env deployment_package/
          
          # Create a valid depo79 package.json
          mkdir -p deployment_package/depo79
          echo '{
            "name": "depo79",
            "private": true,
            "version": "0.0.0",
            "type": "module"
          }' > deployment_package/depo79/package.json
          
          # Add a .deployment file
          echo '[config]' > deployment_package/.deployment
          echo 'SCM_DO_BUILD_DURING_DEPLOYMENT=false' >> deployment_package/.deployment
          
          # Debug: Check if package.json is valid
          cat deployment_package/package.json | jq
          
          # Create zip from clean directory
          cd deployment_package
          zip -r ../deploy.zip .
          cd ..

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "Internship"
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./deploy.zip